drop table if exists mpa cascade;
drop table if exists films cascade;
drop table if exists genres cascade;
drop table if exists users cascade;
drop table if exists film_genres cascade;
drop table if exists film_likes cascade;
drop table if exists user_friends cascade;

CREATE TABLE IF NOT EXISTS mpa (
    mpa_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mpa_name varchar(10) NOT NULL
);

CREATE TABLE IF NOT EXISTS films (
    film_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name varchar(40) NOT NULL,
    description varchar(200),
    release_date date NOT NULL,
    duration integer NOT NULL,
    mpa_id integer REFERENCES mpa(mpa_id)
);

CREATE TABLE IF NOT EXISTS genres (
    genre_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre_name varchar(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS film_genres (
    film_id integer REFERENCES films (film_id) on delete cascade,
    genre_id integer REFERENCES genres (genre_id),
    primary key (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS users (
    user_id integer GENERATED  BY DEFAULT AS IDENTITY PRIMARY KEY,
    email varchar(40) NOT NULL,
    login varchar(20) NOT NULL,
    name varchar(20) NOT NULL,
    birthday date NOT NULL,
    unique (email, login)
);

CREATE TABLE IF NOT EXISTS film_likes (
    film_id integer REFERENCES films (film_id) on delete cascade,
    user_id integer REFERENCES users (user_id) on delete cascade,
    primary key (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS user_friends (
    user_id integer REFERENCES users (user_id) on delete cascade,
    friend_id integer REFERENCES users (user_id) on delete cascade,
    primary key (user_id, friend_id)
);